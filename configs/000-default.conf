<VirtualHost 127.0.0.1:81>
	# This apache only listens on localhost.  nginx will cache the request between the client
	# and route it either to it's own cache or proxy it to this apache.
        # in case an SSL request comes in, haproxy will terminate SSL and internally forward to nginx on an localport.
	# This will help us switch backend databases and also offload apache, it will only serve requests from it's own cache
	# or it will use renderd to render a fresh tile

	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
        KeepAlive On
	# To the client (here that is nginx)
	KeepAliveTimeout 30 

        ServerName maps.byteless.net
        ServerAlias maps2.byteless.net

	# Test url
        ServerAlias tilesnew.byteless.net

	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html

	LoadTileConfigFile /usr/local/etc/renderd.conf

	ModTileRenderdSocketName /var/run/renderd/renderd.sock
	# Timeout before giving up for a tile to be rendered
	ModTileRequestTimeout 0
	# Timeout before giving up for a tile to be rendered that is otherwise missing
	ModTileMissingRequestTimeout 30

	# If tile is out of date, don't re-render it if past this load threshold (users gets old tile)
 	#ModTileMaxLoadOld 4

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf

	##
	## Options controlling the cache proxy expiry headers. All values are in seconds.
	##
	## Caching is both important to reduce the load and bandwidth of the server, as
	## well as reduce the load time for the user. The site loads fastest if tiles can be
	## taken from the users browser cache and no round trip through the internet is needed.
	
	## Caching is always a trade-off between being up to date and reducing server load or
	## client side latency and bandwidth requirements. Under some conditions, like poor
	## network conditions it might be more important to have good caching rather than the latest tiles.
	## Therefor the following config options allow to set a special hostheader for which the caching
	## behaviour is different to the normal heuristics

	# Upper bound on the length a tile will be set cacheable, which takes
	# precedence over other settings of cacheing
	ModTileCacheDurationMax 604800
	# Sets the time tiles can be cached for that are known to by outdated and have been
	# sent to renderd to be rerendered. This should be set to a value corresponding
	# roughly to how long it will take renderd to get through its queue. There is an additional
	# fuzz factor on top of this to not have all tiles expire at the same time
	ModTileCacheDurationDirty 900

	# Specify the minimum time mod_tile will set the cache expiry to for fresh tiles. There
	# is an additional fuzz factor of between 0 and 3 hours on top of this.
	ModTileCacheDurationMinimum 259200

	# Lower zoom levels are less likely to change noticeable, so these could be cached for longer
	# without users noticing much.
	# The heuristic offers three levels of zoom, Low, Medium and High, for which different minimum
	# cacheing times can be specified.

	#Specify the zoom level below  which Medium starts and the time in seconds for which they can be cached
	ModTileCacheDurationMediumZoom 14 86400

	#Specify the zoom level below which Low starts and the time in seconds for which they can be cached
	ModTileCacheDurationLowZoom 9 604800

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
        LogLevel warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log vhost_ssl env=!dontlog


</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
