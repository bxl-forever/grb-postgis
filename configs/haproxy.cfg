# this config needs haproxy-1.5

global
	log 127.0.0.1	local0
	log 127.0.0.1	local1 notice
	#log loghost	local0 info
	maxconn 4096
	#chroot /usr/share/haproxy
	user haproxy
	group haproxy
	daemon
	#debug
	#quiet
    #tune.ssl.default-dh-param 2048

    stats socket /tmp/haproxy.stat mode 0666 level admin

   	spread-checks 5


defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	retries	3
	option redispatch
	maxconn	2000
	timeout connect	5000
	timeout client	50000
	timeout server	50000

# Host HA-Proxy's web stats on Port 81.
#listen HAProxy-Statistics *:8182
#    mode http
#    option httplog
#    option httpclose
#    stats enable
#    stats uri /haproxy?stats
#    stats refresh 20s
#    stats show-node
#    stats show-legends
#    stats show-desc TILESERVER SSL router
#    stats auth admin:MySt3v1gSp4l

frontend f_web_ssl
  #option forwardfor
  #option httplog

  # Default SSL material locations (not needed here)
  # ca-base /etc/haproxy/certs.d
  # crt-base /etc/haproxy/certs.d

  bind :443 ssl crt /etc/haproxy/default.pem crt /etc/haproxy/certs.d no-sslv3 ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

  reqadd X-Forwarded-Proto:\ https

  # use_backend blah_tc_web if { hdr(host) -i admin.maps.via.com }

  default_backend tile_via_nginx

backend tile_via_nginx
    mode http
    balance roundrobin
    option forwardfor

    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    
    #server apache_local 127.0.0.1:80 maxconn 30 minconn 5 weight 50 maxqueue 10 check inter 90000 fastinter 2000 downinter 10000 rise 2 fall 3
    server nginx_local 127.0.0.1:80 maxconn 30 minconn 5 weight 50 maxqueue 10 check inter 90000 fastinter 2000 downinter 10000 rise 2 fall 3

# This order seems to matter! ->

# 1 Private key certificate
# 2 Public key certificate
# 3 Intermediate CA certificate(s)
# 4 Optional but recommended: DH primes

# cat /etc/letsencrypt/archive/tilesnew.byteless.net/privkey1.pem /etc/letsencrypt/archive/tilesnew.byteless.net/fullchain1.pem > /etc/haproxy/certs.d/tilesnew.pem

